
/* Mixins
-------------------------------------------------- */

  // backgrounds
  @mixin background($size, $image, $repeat: no-repeat) {
	background-size: $size;
	background-image: url($image);
	background-repeat: $repeat;
  }

  // outlines
  @mixin outline() {
  	// outline: 1px auto $black05;
  	outline: 1px auto white;
  	// outline: 1px auto -webkit-focus-ring-color;
  	// outline-offset: -2px;
  	// outline-offset: 1px;
  }

  // Font weights and styles
  @mixin serif($weight, $style: normal) {
	@if $weight == 300 {
	  @if $style == "italic" {
		font-family: "klinic_slab_lightit", $seriffallback;
	  } @else {        
		font-family: "klinic_slab_light", $seriffallback;
	  }
	} @else if $weight == 400 {
	  @if $style == "italic" {
		font-family: "klinic_slab_bookit", $seriffallback;
	  } @else {        
		font-family: "klinic_slab_book", $seriffallback;
	  }
	} @else if $weight == 500 {
	  @if $style == "italic" {
		font-family: "klinic_slab_mediumit", $seriffallback;
	  } @else {        
		font-family: "klinic_slab_medium", $seriffallback;
	  }
	} @else if $weight == 600 {
	  @if $style == "italic"{
		font-family: "klinic_slab_mediumit", $seriffallback;
	  } @else {
		font-family: "klinic_slab_medium", $seriffallback;
	  }
	}
  }

  // Fonts - Adobe Garamond Pro and Proxima Nova
  @mixin program-category {
  }


	// lookup http://stackoverflow.com/questions/13545737/need-help-creating-a-percentage-based-sass-grid-system
	// accepts number of columns a block should span
	// returns a percentage width for that block

	@mixin two-columns($gap, $columns: 2) {
		-webkit-columns: $columns;
		-moz-columns: $columns;
		columns: $columns;
		-webkit-column-gap: $gap; /* Chrome, Safari, Opera */
		-moz-column-gap: $gap; /* Firefox */
		column-gap: $gap;
	}
	@mixin break-inside($which) {
		-webkit-column-break-inside: $which;
		page-break-inside: $which;
		break-inside: $which;
	}

	// vertical align
	@mixin vertically-align-grandparent {
		display: table;
		width: 100%;
	}

	@mixin vertically-align-parent {
		position: relative; 
		-webkit-transform-style : preserve-3d;
		-moz-transform-style    : preserve-3d;
		-ms-transform-style    : preserve-3d;
		-o-transform-style    : preserve-3d;
		transform-style         : preserve-3d;

		// for unknown heights
		display: table-cell;
		width: 100%;
		height: 100%;
	}
	// vertical align from http://zerosixthree.se/vertical-align-anything-with-just-3-lines-of-css/ 
	@mixin vertically-align($position: absolute, $offset: 50%) {
		position: $position;
		top: $offset;
		-webkit-transform: translateY(-$offset);
		-ms-transform: translateY(-$offset);
		transform: translateY(-$offset);
	}

	.vertically-align-grandparent {@include vertically-align-grandparent;height: 100%;}
	.vertically-align-uncle{display: table-row;}
	.vertically-align-parent {@include vertically-align-parent;}
	.vertically-align {@include vertically-align;}


 /* Clear left for correct alignment of cards in rows
 -------------------------------------------------- */

	 @mixin clear-2 {
 		&:nth-of-type(2n + 1) {
 			clear:left;
 		}
	 }
	 @mixin clear-3 {
	 	// reset
	 	&:nth-of-type(2n + 1) {
	 		clear:none;
	 	}
	 	// rule
	 	&:nth-of-type(3n + 1) {
 			clear:left;
 		}
	 }
	 @mixin clear-4 {
	 	// reset
	 	&:nth-of-type(2n + 1) {
	 		clear:none;
	 	}
	 	&:nth-of-type(3n + 1) {
 			clear:none;
 		}
	 	// rule
	 	&:nth-of-type(4n + 1) {
 			clear:left;
 		}
	 }
 	 @mixin clear-6 {
 	 	// reset
 	 	&:nth-of-type(2n + 1) {
 	 		clear:none;
 	 	}
 	 	&:nth-of-type(3n + 1) {
  			clear:none;
  		}
 	 	&:nth-of-type(4n + 1) {
  			clear:none;
  		}
	 	// &:nth-of-type(6n + 1) {
	 	&:nth-of-type(6n + 1) {
 			clear:left;
 		}
 	 }

 // @mixin border($location: all, $width: 1px, $color: $black50) {
 @mixin border($location: all, $width: 1px, $color: $black40) {
 	@if $location == top {
 	  border-top: $width solid $color;
 	} @else if $location == bottom {
 	  border-bottom: $width solid $color;
 	} @else if $location == right {
 	  border-right: $width solid $color;
 	} @else if $location == left {
 	  border-left: $width solid $color;
 	} @else {
 	  border: $width solid $color;
 	}
 }